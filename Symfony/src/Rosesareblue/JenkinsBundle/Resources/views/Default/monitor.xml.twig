<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs
        title="{{buildName}}"
        author_email="russell.geraghty@bjss.com"
        description="Build status monitor.">
        <Require feature="opensocial-0.8" />
        <Require feature="dynamic-height" />
        <Require feature="settitle" />
    </ModulePrefs>
    <Content type="html"><![CDATA[<div id="content_div"></div>

        <script src="/gadgets/proxy?url=http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

        <script type="text/javascript">
            var g_url = "{{url}}";
            var g_timeout = {{refresh}};

            // Leave these alone

            function makeJSONRequest() {
                var params = {};

                params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
                // This URL returns a JSON-encoded string that represents a JavaScript
                // object
                var url = g_url;

                makeCachedRequest(url, response, params, g_timeout - 5);
            }

            function makeCachedRequest(url, callback, params, refreshInterval) {
                var ts = new Date().getTime();
                var sep = "?";
                if (refreshInterval && refreshInterval > 0) {
                    ts = Math.floor(ts / (refreshInterval * 1000));
                }
                if (url.indexOf("?") > -1) {
                    sep = "&";
                }
                url = [url, sep, "nocache=", ts].join("");
                gadgets.io.makeRequest(url, callback, params);
            }

            function toProperCase(str) {
                var noCaps = ['of', 'a', 'the', 'and', 'an', 'am', 'or', 'nor', 'but', 'is', 'if', 'then', 'else', 'when', 'at', 'from', 'by', 'on', 'off', 'for', 'in', 'out', 'to', 'into', 'with'];
                return str.replace(/\w\S*/g, function(txt, offset) {
                    if (offset != 0 && noCaps.indexOf(txt.toLowerCase()) != -1) {
                        return txt.toLowerCase();
                    }
                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
                });
            }

            function response(obj) {
                var jsondata = obj.data;
                if (jsondata) {
                    var node = $("#content_div");
                    node.html("");

                    var title = jsondata["fullDisplayName"];
                    gadgets.window.setTitle(title);

                    $("<h1 />").text(title).appendTo(node);

                    var result = jsondata["result"];
                    var building = jsondata["building"];

                    if (building) {
                        // TODO building
                        $("<h2 />").text("Building...").appendTo("<div />").appendTo(node);

                        var startedTime = jsondata["timestamp"];
                        var timeEstimate = jsondata["estimatedDuration"];
                        var endsAt = new Date(startedTime + timeEstimate);

                        $("<div />").text("Estimated competion time is " + endsAt.getHours() + ":" + endsAt.getMinutes()).appendTo(node);
                    } else {
                        $("<strong />").text("Build Completed").appendTo("<div />").appendTo(node);
                        $("<div />").text(toProperCase(result)).appendTo(node);
                    }


                    // List out the changes
                    var changesetItems = jsondata["changeSet"]["items"];
                    if (changesetItems.length > 0) {
                        $("<br />").appendTo(node);
                        $("<strong />").text("Changes in this build").appendTo(node);
                        var list = $("<ul />").appendTo(node);

                        $(changesetItems).each(function(i, t) {
                            $("<li />").text(t["msg"]).appendTo(list);
                        });
                    }

                    // List out the culprits
                    var participents = jsondata["culprits"];
                    if (participents.length > 0) {
                        $("<br />").appendTo(node);

                        var label = "SUCCESS" === result ? "Participants" : "Culprits";

                        $("<strong />").text(label).appendTo(node);

                        var culprits = $("<ul />").appendTo(node);
                        $(participents).each(function(i, t) {
                            var name = t["fullName"];
                            name = name.replace(".", " ");
                            name = toProperCase(name);
                            $("<li />").text(name).appendTo(culprits);
                        });
                    }
                }

                gadgets.window.adjustHeight();
            }

            function reload() {
                makeJSONRequest();
            }

            gadgets.util.registerOnLoadHandler(makeJSONRequest);

            // Now schedule a reload
            window.setInterval(reload, g_timeout * 1000);
            </script>]]></Content>
    </Module>
